#!/bin/sh

# Copyright (c) 2017-2018 Robert LaRocca

# Use of this source code is governed by an MIT-style license that can be
# found in the projects LICENSE file or https://www.laroccx.com/LICENSE.md

PROFILEVERSION="1.39"

# simple aliases
alias sudo="sudo "
alias nano="nano --tabsize=4 --smooth"
alias ls="ls -F --color=auto"
alias ll="ls -Alh"
alias la="ls -A"
alias l.="ll -a"
alias k="reset"

# needed additional macOS only commands
#
if [ -f /etc/bash.macos ]; then
	source /etc/bash.macos
else
	MACOSVERSION="Unavailable"
fi

function bash_profile()
{
local _location="/etc"
local _profile="bash.aliases"
local _backups="$HOME/Desktop"

# options for bash_profile command
#
case $1 in
-b|--backup)
	if [ -z $2 ]; then
		cp -v $_location/$_profile $_backups/$_profile.sh
	else
		cp -v $_location/$_profile $2
	fi
	;;
--version)
	printf "bash.aliases, version $PROFILEVERSION-$(uname)\n"
	printf "bash.macos, version $MACOSVERSION-$(uname)\n"
	printf "Copyright (c) 2018 Robert LaRocca\n"
	;;
-g|-x|--gedit|--xcode)
	local _editor=null
	if [ $(uname) == "Darwin" ]; then
		local _editor="open /Applications/Xcode.app"
	elif [ $(lsb_release -is) == "Ubuntu" ]; then
		local _editor=gedit
	else
		# bash default
		#
		local _editor=vi
	fi
	sudo $_editor $_location/$_profile
	;;
-n|--nano)
	sudo nano $_location/$_profile
	;;
*)
	if [ ! -z $1 ]; then
		if [ "-e == $1" ] || [ "--edit == $1" ]; then
			sudo vi $_location/$_profile
		else
			printf "$0: unrecognized option '$1'\n"
		fi
	fi
	;;
esac
};

function clean()
{
	# display the clean command help message
	#
	function display_help_message()
	{
	cat <<-EOF
	Usage: clean [-abpwesr] TIME [--help]

	Clear and delete command history.

	  -a, --all	remove all history files from above
	  -b, --bash	remove bash command history
	  -p, --python	remove python command history
	  -w, --wget	remove wget download history
	  -e, --exit	remove bash command history and exit
	  -s, --shutdown	remove bash command history and shutdown
	  -r, --reboot	remove bash command history and reboot
	  --sleep	remove bash command history and sleep [macOS only]
	  --help	print command usage and exit
	EOF
	};

	# remove history and sessions only when needed
	#
	function remove-bash-history()
	{
	if [ -e $HOME/.bash_history ]; then
		rm -f $HOME/.bash_history
	fi
	if [ -e $HOME/.bash_sessions ]; then
		rm -f $HOME/.bash_sessions/*
	fi
	history -c
	return
	};

# options for clean function
#
case $1 in
-e|--exit)
	reset
	remove-bash-history
	exit
	;;
-r|--reboot)
	clear
	remove-bash-history
	if [ -z $2 ]; then
		sudo shutdown -r now
	else
		sudo shutdown -r $2
	fi
	;;
--sleep)
	reset
	remove-bash-history
	if [ -z $2 ]; then
		sudo shutdown -s now
	else
		sudo shutdown -s $2
	fi
	;;
-s|--shutdown)
	clear
	remove-bash-history
	if [ -z $2 ]; then
		sudo shutdown -h now
	else
		sudo shutdown -h $2
	fi
	;;
-p|--python)
	reset
	remove-bash-history
	if [ -e $HOME/.python_history ]; then
		rm -f $HOME/.python_history
	fi
	;;
-w|--wget)
	reset
	remove-bash-history
	if [ -e $HOME/.wget-hsts ]; then
		rm -f $HOME/.wget-hsts
	fi
	;;
-a|--all)
	reset
	remove-bash-history
	if [ -e $HOME/.python_history ]; then
		rm -f $HOME/.python_history
	fi
	if [ -e $HOME/.wget-hsts ]; then
		rm -f $HOME/.wget-hsts
	fi
	;;
--help)
	display_help_message
	;;
*)
	if [ ! -z $1 ]; then
		if [ "-b" == $1 ] || [ "--bash" == $1 ]; then
			reset
			remove-bash-history
		else
			printf "clean: unrecognized option '$1'\n"
			printf "Try 'clean --help' for more information.\n"
		fi
	else
		reset
		remove-bash-history
	fi
	;;
esac
};

function whatsmyip()
{
printf "IPv4: $(curl -s4 https://ifconfig.co)\n"
printf "IPv6: $(curl -s6 https://ifconfig.co)\n"
};

function swupdate()
{
if [ $(uname) == "Darwin" ]; then
	sudo softwareupdate --list
	sudo softwareupdate --install
elif [ $(lsb_release -is) == "Ubuntu" ]; then
	sudo apt update
	sudo apt --yes upgrade
	sudo apt --yes dist-upgrade
	sudo apt autoremove
	sudo apt autoclean
else
	# defaut software update error
	#
	printf "$(uname) package manager is unavailable\n"
fi
};

